{"version":3,"sources":["webpack:///./src/pages/cv.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/footer.js","webpack:///./src/components/header.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/nav-item.js","webpack:///./src/components/nav.js","webpack:///./src/components/use-pages-data.js","webpack:///./src/components/head.js","webpack:///./src/layouts/main.js","webpack:///./src/static/external.js","webpack:///./src/components/coming-soon.js"],"names":["CVPage","props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layouts_main__WEBPACK_IMPORTED_MODULE_2__","Object","assign","headerText","subHeaderText","title","backgroundImgSrc","imageSelector","data","_components_coming_soon__WEBPACK_IMPORTED_MODULE_3__","query","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","React","InternalPageRenderer","json","propTypes","PropTypes","shape","pathname","string","isRequired","Footer","children","objectWithoutPropertiesLoose_default","react_default","className","styles","footer","Divider","Container","footerText","text","textAlign","header","subText","imgSrc","container","gatsby_image_default","img","fixed","Header","as","Fragment","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","StaticQuery","Consumer","object","func","NavItem","handleClick","e","navigate","_this","href","Menu","Item","onClick","this","name","active","isActive","Icon","icon","PureComponent","any","bool","Nav","pages","_2596092274","site","siteMetadata","pointing","secondary","stackable","fluid","widths","length","nav","map","page","i","nav_item","key","Head","gatsby_browser_entry_StaticQuery","_ref2","_ref2$site$siteMetada","url","twitter","ogImgPath","Helmet","defaultTitle","titleTemplate","lang","rel","content","property","_2359324934","MainLayout","state","scriptsLoaded","scriptsError","componentDidMount","_callee","scriptLoadPs","regenerator_default","wrap","_context","prev","next","extScripts","src","loadScript","inBody","Promise","all","setState","t0","stop","head","main","contentContainer","Component","calcYear","arrayOf","defaultProps","Date","getFullYear","file","childImageSharp","__webpack_require__","d","__webpack_exports__","ComingSoon","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","_coming_soon_module_css__WEBPACK_IMPORTED_MODULE_2__","_coming_soon_module_css__WEBPACK_IMPORTED_MODULE_2___default","_ref$Component","_ref$children","mainText"],"mappings":"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","file":"component---src-pages-cv-js-70cb01bb4b9c7160f771.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport MainLayout, { imageSelector } from '../layouts/main'\nimport { ComingSoon } from '../components/coming-soon'\n\nconst CVPage = props => (\n    <MainLayout\n        headerText=\"Curriculum vitae\"\n        subHeaderText=\"Want more detail?\"\n        title=\"Curriculum vitae\"\n        backgroundImgSrc={imageSelector(props.data)}\n        {...props}\n    >\n        <ComingSoon />\n    </MainLayout>\n)\n\nexport default CVPage\n\nexport const query = graphql`\n    query {\n        file(relativePath: { eq: \"canhdong.jpg\" }) {\n            ...HeaderImageFragment\n        }\n    }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Container, Divider } from 'semantic-ui-react'\n\nimport styles from './footer.module.css'\n\nconst Footer = ({ children, ...props }) => (\n    <footer className={styles.footer} {...props}>\n        <Divider />\n        <Container className={styles.footerText} text textAlign=\"right\">\n            <p>{children}</p>\n        </Container>\n    </footer>\n)\n\nexport default Footer\n","import React from 'react'\nimport Img from 'gatsby-image'\nimport { Header } from 'semantic-ui-react'\n\nimport styles from './header.module.css'\n\nexport default ({ children, subText, imgSrc, ...props }) => (\n    <header className={styles.container} {...props}>\n        <Img className={styles.img} fixed={imgSrc} />\n        <Header as=\"h1\" className={styles.headerText}>\n            {children}\n        </Header>\n        {subText && (\n            <>\n                <Header as=\"h2\" className={styles.subText}>\n                    {subText}\n                </Header>\n            </>\n        )}\n    </header>\n)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react'\nimport propTypes from 'prop-types'\nimport { navigate } from 'gatsby'\nimport { Menu, Icon } from 'semantic-ui-react'\n\nclass NavItem extends React.PureComponent {\n    static propTypes = {\n        name: propTypes.string.isRequired,\n        href: propTypes.string.isRequired,\n        icon: propTypes.string.isRequired,\n        location: propTypes.any.isRequired,\n        header: propTypes.bool,\n    }\n\n    get isActive() {\n        return this.props.location.pathname === this.props.href\n    }\n\n    handleClick = e => navigate(this.props.href)\n\n    render() {\n        return (\n            <Menu.Item\n                onClick={this.handleClick}\n                name={this.props.name}\n                header={this.props.header}\n                active={this.isActive}\n            >\n                <Icon name={this.props.icon} /> {this.props.name}\n            </Menu.Item>\n        )\n    }\n}\n\nexport default NavItem\n","import React from 'react'\nimport { Menu } from 'semantic-ui-react'\n\nimport { usePagesData } from './use-pages-data'\nimport NavItem from './nav-item'\nimport styles from './nav.module.css'\n\nconst Nav = props => {\n    const pages = usePagesData()\n\n    return (\n        <Menu\n            pointing\n            secondary\n            stackable\n            fluid\n            widths={pages.length}\n            className={styles.nav}\n        >\n            {pages.map((page, i) => (\n                <NavItem key={i} {...props} {...page} />\n            ))}\n        </Menu>\n    )\n}\n\nexport default Nav\n","import { useStaticQuery, graphql } from 'gatsby'\n\nexport const usePagesData = () => {\n    const data = useStaticQuery(graphql`\n        query SiteTitleQuery {\n            site {\n                siteMetadata {\n                    pages {\n                        name\n                        href\n                        icon\n                        header\n                    }\n                }\n            }\n        }\n    `)\n\n    return data.site.siteMetadata.pages\n}\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { graphql, StaticQuery } from 'gatsby'\n\nconst Head = ({ pathname, title }) => (\n    <StaticQuery\n        query={graphql`\n            query SiteMetadata {\n                site {\n                    siteMetadata {\n                        url\n                        twitter\n                        ogImgPath\n                    }\n                }\n            }\n        `}\n        render={({\n            site: {\n                siteMetadata: { url, twitter, ogImgPath },\n            },\n        }) => (\n            <Helmet defaultTitle={title} titleTemplate={`%s | ${title}`}>\n                <html lang=\"en\" />\n                <link rel=\"canonical\" href={`${url}${pathname}`} />\n                <meta name=\"docsearch:version\" content=\"2.0\" />\n                <meta\n                    name=\"viewport\"\n                    content=\"width=device-width,initial-scale=1,shrink-to-fit=no,viewport-fit=cover\"\n                />\n\n                <meta property=\"og:url\" content={url} />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:locale\" content=\"en\" />\n                <meta property=\"og:site_name\" content={title} />\n                <meta property=\"og:image\" content={`${url}${ogImgPath}`} />\n                <meta property=\"og:image:width\" content=\"512\" />\n                <meta property=\"og:image:height\" content=\"512\" />\n\n                <meta name=\"twitter:card\" content=\"summary\" />\n                <meta name=\"twitter:site\" content={twitter} />\n            </Helmet>\n        )}\n    />\n)\n\nexport default Head\n","import 'semantic-ui-css/semantic.min.css'\nimport React from 'react'\nimport propTypes from 'prop-types'\nimport loadScript from 'simple-load-script'\nimport { Container } from 'semantic-ui-react'\n\nimport { scripts } from '../static/external'\nimport { Header, Footer, Nav, Head } from '../components'\nimport styles from './main.module.css'\nimport { graphql } from 'gatsby'\n\nclass MainLayout extends React.Component {\n    static propTypes = {\n        backgroundImgSrc: propTypes.object.isRequired,\n        title: propTypes.string.isRequired,\n        headerText: propTypes.string.isRequired,\n        subHeaderText: propTypes.string.isRequired,\n        calcYear: propTypes.func,\n        extScripts: propTypes.arrayOf(propTypes.string),\n    }\n\n    static defaultProps = {\n        calcYear: () => new Date().getFullYear(),\n        extScripts: scripts,\n    }\n\n    state = {\n        scriptsLoaded: false,\n        scriptsError: null,\n    }\n\n    async componentDidMount() {\n        const scriptLoadPs = this.props.extScripts.map(src =>\n            loadScript(src, { inBody: true }),\n        )\n\n        try {\n            await Promise.all(scriptLoadPs)\n            this.setState(state => ({ scriptsLoaded: true }))\n        } catch (err) {\n            this.setState(state => ({ scriptsLoaded: true, scriptsError: err }))\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Head\n                    pathname={this.props.location.pathname}\n                    title={this.props.title}\n                />\n                <div className={styles.main}>\n                    <div className={styles.container}>\n                        <Nav {...this.props} />\n                        <Header\n                            subText={this.props.subHeaderText}\n                            imgSrc={this.props.backgroundImgSrc}\n                        >\n                            {this.props.headerText}\n                        </Header>\n\n                        <Container\n                            className={styles.contentContainer}\n                            text\n                            textAlign=\"justified\"\n                        >\n                            {this.props.children}\n                        </Container>\n                    </div>\n\n                    <Footer>I hope you enjoyed my website!</Footer>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default MainLayout\n\nexport const headerImageFragment = graphql`\n    fragment HeaderImageFragment on File {\n        childImageSharp {\n            fixed(width: 900, height: 500) {\n                ...GatsbyImageSharpFixed\n            }\n        }\n    }\n`\n\nexport const imageSelector = data => data.file.childImageSharp.fixed\n","export const scripts = []\n","import React from 'react'\nimport { Header } from 'semantic-ui-react'\n\nimport styles from './coming-soon.module.css'\n\nexport const ComingSoon = ({\n    Component = Header,\n    children = 'Coming soon...',\n}) => <Component className={styles.mainText}>{children}</Component>\n"],"sourceRoot":""}