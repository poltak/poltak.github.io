{"version":3,"sources":["webpack:///./src/components/contact-card.js","webpack:///./src/components/contact-card-container.js","webpack:///./src/components/use-contact-data.js","webpack:///./src/pages/contact.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/footer.js","webpack:///./src/components/header.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/nav-item.js","webpack:///./src/components/nav.js","webpack:///./src/components/use-pages-data.js","webpack:///./src/components/head.js","webpack:///./src/layouts/main.js","webpack:///./src/static/external.js"],"names":["ContactCardInfoRow","props","react_default","a","createElement","className","styles","infoRow","infoRowTitle","Icon","name","icon","title","infoRowValue","href","value","propTypes","string","isRequired","ContactCard","_React$PureComponent","apply","this","arguments","inheritsLoose_default","prototype","render","_cx","cx","container","containerCentered","centered","Image","avatarImg","src","avatarHref","infoContainer","contact_card_ContactCardInfoRow","email","emailHref","linkedIn","linkedInHref","github","githubHref","twitter","twitterHref","createClass_default","key","get","React","PureComponent","bool","contact_card_ContactCard","Object","assign","_685256109","data","site","siteMetadata","ContactPage","main","headerText","subHeaderText","backgroundImgSrc","imageSelector","contact_card_container_ContactCard","query","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","json","PropTypes","shape","pathname","Footer","children","objectWithoutPropertiesLoose_default","footer","Divider","Container","footerText","text","textAlign","header","subText","imgSrc","gatsby_image_default","img","fixed","Header","as","Fragment","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","finalData","StaticQuery","Consumer","object","func","NavItem","handleClick","e","navigate","_this","Menu","Item","onClick","active","isActive","any","Nav","pages","_2596092274","pointing","secondary","stackable","fluid","widths","length","nav","map","page","i","nav_item","Head","gatsby_browser_entry_StaticQuery","_ref2","_ref2$site$siteMetada","url","ogImgPath","Helmet","defaultTitle","titleTemplate","lang","rel","content","property","_2359324934","MainLayout","state","scriptsLoaded","scriptsError","componentDidMount","_callee","scriptLoadPs","regenerator_default","wrap","_context","prev","next","extScripts","loadScript","inBody","Promise","all","setState","t0","stop","head","contentContainer","Component","calcYear","arrayOf","defaultProps","Date","getFullYear","file","childImageSharp"],"mappings":"8PAOaA,EAAqB,SAAAC,GAAK,OACnCC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOC,SACnBL,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOE,cACnBN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,KAAMT,EAAMU,OACjBV,EAAMW,OAEXV,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAOO,aAAcC,KAAMb,EAAMa,MAC1Cb,EAAMc,SAKnBf,EAAmBgB,UAAY,CAC3BL,KAAMK,IAAUC,OAAOC,WACvBN,MAAOI,IAAUC,OAAOC,WACxBH,MAAOC,IAAUC,OAAOC,WACxBJ,KAAME,IAAUC,OAAOC,YAGpB,IAAMC,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAAC,KAAAC,YAAAD,KAAA,OAAAE,IAAAL,EAAAC,GAAAD,EAAAM,UA8BIC,OAAA,WAAS,IAAAC,EACL,OACIzB,EAAAC,EAAAC,cAAA,OACIC,UAAWuB,IAAGtB,IAAOuB,UAAWP,KAAKrB,MAAMI,WAA9BsB,EAAA,GAAAA,EACRrB,IAAOwB,mBAAoBR,KAAKrB,MAAM8B,SAD9BJ,KAIbzB,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAO3B,UAAWC,IAAO2B,UAAWC,IAAKZ,KAAKa,aAC9CjC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO8B,eACnBlC,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOI,MAAOY,KAAKrB,MAAMS,MACxCR,EAAAC,EAAAC,cAACiC,EAAD,CACI1B,KAAK,eACLC,MAAM,QACNG,MAAOO,KAAKrB,MAAMqC,MAClBxB,KAAMQ,KAAKiB,YAEfrC,EAAAC,EAAAC,cAACiC,EAAD,CACI1B,KAAK,WACLC,MAAM,WACNG,MAAOO,KAAKrB,MAAMuC,SAClB1B,KAAMQ,KAAKmB,eAEfvC,EAAAC,EAAAC,cAACiC,EAAD,CACI1B,KAAK,SACLC,MAAM,SACNG,MAAOO,KAAKrB,MAAMyC,OAClB5B,KAAMQ,KAAKqB,aAEfzC,EAAAC,EAAAC,cAACiC,EAAD,CACI1B,KAAK,UACLC,MAAM,UACNG,MAAOO,KAAKrB,MAAM2C,QAClB9B,KAAMQ,KAAKuB,iBA9DnCC,IAAA3B,EAAA,EAAA4B,IAAA,aAAAC,IAAA,WAYQ,+CAAgD1B,KAAKrB,MAAMyC,SAZnE,CAAAK,IAAA,eAAAC,IAAA,WAgBQ,oCAAqC1B,KAAKrB,MAAMuC,WAhBxD,CAAAO,IAAA,aAAAC,IAAA,WAmBQ,4BAA6B1B,KAAKrB,MAAMyC,SAnBhD,CAAAK,IAAA,cAAAC,IAAA,WAuBQ,iCAAkC1B,KAAKrB,MAAM2C,UAvBrD,CAAAG,IAAA,YAAAC,IAAA,WA2BQ,gBAAiB1B,KAAKrB,MAAMqC,UA3BpCnB,EAAA,CAAiC8B,IAAMC,eAA1B/B,EACFH,UAAY,CACfX,UAAWW,IAAUC,OACrBP,KAAMM,IAAUC,OAAOC,WACvBoB,MAAOtB,IAAUC,OAAOC,WACxBsB,SAAUxB,IAAUC,OAAOC,WAC3BwB,OAAQ1B,IAAUC,OAAOC,WACzB0B,QAAS5B,IAAUC,OAAOC,WAC1Ba,SAAUf,IAAUmC,MC7BrB,IAAMhC,EAAc,SAAAlB,GAAK,OAAIC,EAAAC,EAAAC,cAACgD,EAADC,OAAAC,OAAA,GCFnBC,EAAAC,KAcDC,KAAKC,aDZ+CzD,yCEiBrD0D,UAhBK,SAAA1D,GAAK,OACrBC,EAAAC,EAAAC,cAACwD,EAAA,EAADP,OAAAC,OAAA,CACIO,WAAW,UACXC,cAAc,yBACdlD,MAAM,UACNmD,iBAAkBC,YAAc/D,EAAMuD,OAClCvD,GAEJC,EAAAC,EAAAC,cAAA,qIAIAF,EAAAC,EAAAC,cAAC6D,EAAD,CAAalC,UAAQ,MAZ7B,IAkBamC,EAAK,kCCxBlB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,6YCKzCK,EAAmB,SAAAC,GAAiC,IAA9BC,EAA8BD,EAA9BC,SAAUC,EAAoBF,EAApBE,cACpC,OAAKA,EAGE1B,IAAM7C,cAAcwE,IAApBvB,OAAAC,OAAA,CACLoB,WACAC,iBACGA,EAAcE,OALV,MASXL,EAAiBxD,UAAY,CAC3B0D,SAAUI,IAAUC,MAAM,CACxBC,SAAUF,IAAU7D,OAAOC,aAC1BA,YAGUsD,iZCRAS,EATA,SAAAR,GAAA,IAAGS,EAAHT,EAAGS,SAAajF,EAAhBkF,IAAAV,EAAA,qBACXvE,EAAAC,EAAAC,cAAA,SAAAiD,OAAAC,OAAA,CAAQjD,UAAWC,IAAO8E,QAAYnF,GAClCC,EAAAC,EAAAC,cAACiF,EAAA,EAAD,MACAnF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAWjF,UAAWC,IAAOiF,WAAYC,MAAI,EAACC,UAAU,SACpDvF,EAAAC,EAAAC,cAAA,SAAI8E,mDCHDQ,EAAA,SAAAjB,GAAA,IAAGS,EAAHT,EAAGS,SAAUS,EAAblB,EAAakB,QAASC,EAAtBnB,EAAsBmB,OAAW3F,EAAjCkF,IAAAV,EAAA,wCACXvE,EAAAC,EAAAC,cAAA,SAAAiD,OAAAC,OAAA,CAAQjD,UAAWC,IAAOuB,WAAe5B,GACrCC,EAAAC,EAAAC,cAACyF,EAAA1F,EAAD,CAAKE,UAAWC,IAAOwF,IAAKC,MAAOH,IACnC1F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAQC,GAAG,KAAK5F,UAAWC,IAAOuD,YAC7BqB,GAEJS,GACGzF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+F,SAAA,KACIhG,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAQC,GAAG,KAAK5F,UAAWC,IAAOqF,SAC7BA,0DCFfQ,UAAqBlD,IAAMmD,cAAc,KAE/C,SAASC,EAAT5B,GAA2E,IAAxC6B,EAAwC7B,EAAxC6B,gBAAiB9C,EAAuBiB,EAAvBjB,KAAMU,EAAiBO,EAAjBP,MAAOxC,EAAU+C,EAAV/C,OACzD6E,EAAY/C,EACdA,EAAKA,KACL8C,EAAgBpC,IAAUoC,EAAgBpC,GAAOV,KAErD,OACEtD,EAAAC,EAAAC,cAACF,EAAAC,EAAM+F,SAAP,KACGK,GAAa7E,EAAO6E,IACnBA,GAAarG,EAAAC,EAAAC,cAAA,qCAKrB,IAAMoG,EAAc,SAAAvG,GAAS,IACnBuD,EAAkCvD,EAAlCuD,KAAMU,EAA4BjE,EAA5BiE,MAAOxC,EAAqBzB,EAArByB,OAAQwD,EAAajF,EAAbiF,SAE7B,OACEhF,EAAAC,EAAAC,cAAC+F,EAAmBM,SAApB,KACG,SAAAH,GAAe,OACdpG,EAAAC,EAAAC,cAACiG,EAAD,CACE7C,KAAMA,EACNU,MAAOA,EACPxC,OAAQA,GAAUwD,EAClBoB,gBAAiBA,OA6B3BE,EAAYxF,UAAY,CACtBwC,KAAMsB,IAAU4B,OAChBxC,MAAOY,IAAU7D,OAAOC,WACxBQ,OAAQoD,IAAU6B,KAClBzB,SAAUJ,IAAU6B,mBClEhBC,sJAaFC,YAAc,SAAAC,GAAC,OAAIC,mBAASC,EAAK/G,MAAMa,qCAEvCY,OAAA,WACI,OACIxB,EAAAC,EAAAC,cAAC6G,EAAA,EAAKC,KAAN,CACIC,QAAS7F,KAAKuF,YACdnG,KAAMY,KAAKrB,MAAMS,KACjBgF,OAAQpE,KAAKrB,MAAMyF,OACnB0B,OAAQ9F,KAAK+F,UAEbnH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,KAAMY,KAAKrB,MAAMU,OAN3B,IAMqCW,KAAKrB,MAAMS,6CAbpD,OAAOY,KAAKrB,MAAMyE,SAASM,WAAa1D,KAAKrB,MAAMa,YAVrCmC,IAAMC,eAAtB0D,EACK5F,UAAY,CACfN,KAAMM,IAAUC,OAAOC,WACvBJ,KAAME,IAAUC,OAAOC,WACvBP,KAAMK,IAAUC,OAAOC,WACvBwD,SAAU1D,IAAUsG,IAAIpG,WACxBwE,OAAQ1E,IAAUmC,MAuBXyD,0BCRAW,EAnBH,SAAAtH,GACR,IAAMuH,ECLOC,EAAAjE,KAeDC,KAAKC,aAAa8D,MDR9B,OACItH,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CACIS,UAAQ,EACRC,WAAS,EACTC,WAAS,EACTC,OAAK,EACLC,OAAQN,EAAMO,OACd1H,UAAWC,IAAO0H,KAEjBR,EAAMS,IAAI,SAACC,EAAMC,GAAP,OACPjI,EAAAC,EAAAC,cAACgI,EAAD/E,OAAAC,OAAA,CAASP,IAAKoF,GAAOlI,EAAWiI,0BE0BjCG,EA1CF,SAAA5D,GAAA,IAAGO,EAAHP,EAAGO,SAAUpE,EAAb6D,EAAa7D,MAAb,OACTV,EAAAC,EAAAC,cAACkI,EAAD,CACIpE,MAAK,aAWLxC,OAAQ,SAAA6G,GAAA,IAAAC,EAAAD,EACJ9E,KACIC,aAAgB+E,EAFhBD,EAEgBC,IAAK7F,EAFrB4F,EAEqB5F,QAAS8F,EAF9BF,EAE8BE,UAF9B,OAKJxI,EAAAC,EAAAC,cAACuI,EAAA,OAAD,CAAQC,aAAchI,EAAOiI,cAAa,QAAUjI,GAChDV,EAAAC,EAAAC,cAAA,QAAM0I,KAAK,OACX5I,EAAAC,EAAAC,cAAA,QAAM2I,IAAI,YAAYjI,KAAI,GAAK2H,EAAMzD,IACrC9E,EAAAC,EAAAC,cAAA,QAAMM,KAAK,oBAAoBsI,QAAQ,QACvC9I,EAAAC,EAAAC,cAAA,QACIM,KAAK,WACLsI,QAAQ,2EAGZ9I,EAAAC,EAAAC,cAAA,QAAM6I,SAAS,SAASD,QAASP,IACjCvI,EAAAC,EAAAC,cAAA,QAAM6I,SAAS,UAAUD,QAAQ,YACjC9I,EAAAC,EAAAC,cAAA,QAAM6I,SAAS,YAAYD,QAAQ,OACnC9I,EAAAC,EAAAC,cAAA,QAAM6I,SAAS,eAAeD,QAASpI,IACvCV,EAAAC,EAAAC,cAAA,QAAM6I,SAAS,WAAWD,QAAO,GAAKP,EAAMC,IAC5CxI,EAAAC,EAAAC,cAAA,QAAM6I,SAAS,iBAAiBD,QAAQ,QACxC9I,EAAAC,EAAAC,cAAA,QAAM6I,SAAS,kBAAkBD,QAAQ,QAEzC9I,EAAAC,EAAAC,cAAA,QAAMM,KAAK,eAAesI,QAAQ,YAClC9I,EAAAC,EAAAC,cAAA,QAAMM,KAAK,eAAesI,QAASpG,MAnC/CY,KAAA0F,2DCMEC,sJAeFC,MAAQ,CACJC,eAAe,EACfC,aAAc,4CAGZC,gDAAN,SAAAC,IAAA,IAAAC,EAAA,OAAAC,EAAAvJ,EAAAwJ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACUL,EAAenI,KAAKrB,MAAM8J,WAAW9B,IAAI,SAAA/F,GAAG,OAC9C8H,IAAW9H,EAAK,CAAE+H,QAAQ,MAFlCL,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMcI,QAAQC,IAAIV,GAN1B,OAOQnI,KAAK8I,SAAS,SAAAhB,GAAK,MAAK,CAAEC,eAAe,KAPjDO,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SASQtI,KAAK8I,SAAS,SAAAhB,GAAK,MAAK,CAAEC,eAAe,EAAMC,aAAYM,EAAAS,MATnE,yBAAAT,EAAAU,SAAAd,EAAAlI,KAAA,mEAaAI,OAAA,WACI,OACIxB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+F,SAAA,KACIhG,EAAAC,EAAAC,cAACmK,EAAD,CACIvF,SAAU1D,KAAKrB,MAAMyE,SAASM,SAC9BpE,MAAOU,KAAKrB,MAAMW,QAEtBV,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOsD,MACnB1D,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOuB,WACnB3B,EAAAC,EAAAC,cAAC4H,EAAQ1G,KAAKrB,OACdC,EAAAC,EAAAC,cAACsF,EAAD,CACIC,QAASrE,KAAKrB,MAAM6D,cACpB8B,OAAQtE,KAAKrB,MAAM8D,kBAElBzC,KAAKrB,MAAM4D,YAGhB3D,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CACIjF,UAAWC,IAAOkK,iBAClBhF,MAAI,EACJC,UAAU,aAETnE,KAAKrB,MAAMiF,WAIpBhF,EAAAC,EAAAC,cAACgF,EAAD,6CA3DKnC,IAAMwH,WAAzBtB,EACKnI,UAAY,CACf+C,iBAAkB/C,IAAU0F,OAAOxF,WACnCN,MAAOI,IAAUC,OAAOC,WACxB2C,WAAY7C,IAAUC,OAAOC,WAC7B4C,cAAe9C,IAAUC,OAAOC,WAChCwJ,SAAU1J,IAAU2F,KACpBoD,WAAY/I,IAAU2J,QAAQ3J,IAAUC,SAP1CkI,EAUKyB,aAAe,CAClBF,SAAU,kBAAM,IAAIG,MAAOC,eAC3Bf,WCvBe,ID6ERZ,UAYFnF,EAAgB,SAAAR,GAAI,OAAIA,EAAKuH,KAAKC,gBAAgBjF","file":"component---src-pages-contact-js-5a0a28491cc0f1aaabc9.js","sourcesContent":["import React from 'react'\nimport cx from 'classnames'\nimport propTypes from 'prop-types'\nimport { Image, Icon } from 'semantic-ui-react'\n\nimport styles from './contact-card.module.css'\n\nexport const ContactCardInfoRow = props => (\n    <div className={styles.infoRow}>\n        <div className={styles.infoRowTitle}>\n            <Icon name={props.icon} />\n            {props.title}\n        </div>\n        <a className={styles.infoRowValue} href={props.href}>\n            {props.value}\n        </a>\n    </div>\n)\n\nContactCardInfoRow.propTypes = {\n    icon: propTypes.string.isRequired,\n    title: propTypes.string.isRequired,\n    value: propTypes.string.isRequired,\n    href: propTypes.string.isRequired,\n}\n\nexport class ContactCard extends React.PureComponent {\n    static propTypes = {\n        className: propTypes.string,\n        name: propTypes.string.isRequired,\n        email: propTypes.string.isRequired,\n        linkedIn: propTypes.string.isRequired,\n        github: propTypes.string.isRequired,\n        twitter: propTypes.string.isRequired,\n        centered: propTypes.bool,\n    }\n\n    get avatarHref() {\n        return `https://avatars.githubusercontent.com/${this.props.github}`\n    }\n\n    get linkedInHref() {\n        return `http://www.linkedin.com/in/${this.props.linkedIn}`\n    }\n    get githubHref() {\n        return `https://github.com/${this.props.github}`\n    }\n\n    get twitterHref() {\n        return `https://www.twitter.com/${this.props.twitter}`\n    }\n\n    get emailHref() {\n        return `mailto:${this.props.email}`\n    }\n\n    render() {\n        return (\n            <div\n                className={cx(styles.container, this.props.className, {\n                    [styles.containerCentered]: this.props.centered,\n                })}\n            >\n                <Image className={styles.avatarImg} src={this.avatarHref} />\n                <div className={styles.infoContainer}>\n                    <h1 className={styles.name}>{this.props.name}</h1>\n                    <ContactCardInfoRow\n                        icon=\"mail outline\"\n                        title=\"Email\"\n                        value={this.props.email}\n                        href={this.emailHref}\n                    />\n                    <ContactCardInfoRow\n                        icon=\"linkedin\"\n                        title=\"LinkedIn\"\n                        value={this.props.linkedIn}\n                        href={this.linkedInHref}\n                    />\n                    <ContactCardInfoRow\n                        icon=\"github\"\n                        title=\"GitHub\"\n                        value={this.props.github}\n                        href={this.githubHref}\n                    />\n                    <ContactCardInfoRow\n                        icon=\"twitter\"\n                        title=\"Twitter\"\n                        value={this.props.twitter}\n                        href={this.twitterHref}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nimport { useContactData } from './use-contact-data'\nimport { ContactCard as Card } from './contact-card'\n\nexport const ContactCard = props => <Card {...useContactData()} {...props} />\n","import { useStaticQuery, graphql } from 'gatsby'\n\nexport const useContactData = () => {\n    const data = useStaticQuery(graphql`\n        query SiteContactQuery {\n            site {\n                siteMetadata {\n                    linkedIn\n                    twitter\n                    github\n                    email\n                    name\n                }\n            }\n        }\n    `)\n\n    return data.site.siteMetadata\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport MainLayout, { imageSelector } from '../layouts/main'\nimport { ContactCard } from '../components/contact-card-container'\n\nconst ContactPage = props => (\n    <MainLayout\n        headerText=\"Contact\"\n        subHeaderText=\"Where can you find me?\"\n        title=\"Contact\"\n        backgroundImgSrc={imageSelector(props.data)}\n        {...props}\n    >\n        <p>\n            My preferred means of contact is via email, although you can also\n            contact me through online social networks that I'm on.\n        </p>\n        <ContactCard centered />\n    </MainLayout>\n)\n\nexport default ContactPage\n\nexport const query = graphql`\n    query {\n        file(relativePath: { eq: \"tra.jpg\" }) {\n            ...HeaderImageFragment\n        }\n    }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Container, Divider } from 'semantic-ui-react'\n\nimport styles from './footer.module.css'\n\nconst Footer = ({ children, ...props }) => (\n    <footer className={styles.footer} {...props}>\n        <Divider />\n        <Container className={styles.footerText} text textAlign=\"right\">\n            <p>{children}</p>\n        </Container>\n    </footer>\n)\n\nexport default Footer\n","import React from 'react'\nimport Img from 'gatsby-image'\nimport { Header } from 'semantic-ui-react'\n\nimport styles from './header.module.css'\n\nexport default ({ children, subText, imgSrc, ...props }) => (\n    <header className={styles.container} {...props}>\n        <Img className={styles.img} fixed={imgSrc} />\n        <Header as=\"h1\" className={styles.headerText}>\n            {children}\n        </Header>\n        {subText && (\n            <>\n                <Header as=\"h2\" className={styles.subText}>\n                    {subText}\n                </Header>\n            </>\n        )}\n    </header>\n)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react'\nimport propTypes from 'prop-types'\nimport { navigate } from 'gatsby'\nimport { Menu, Icon } from 'semantic-ui-react'\n\nclass NavItem extends React.PureComponent {\n    static propTypes = {\n        name: propTypes.string.isRequired,\n        href: propTypes.string.isRequired,\n        icon: propTypes.string.isRequired,\n        location: propTypes.any.isRequired,\n        header: propTypes.bool,\n    }\n\n    get isActive() {\n        return this.props.location.pathname === this.props.href\n    }\n\n    handleClick = e => navigate(this.props.href)\n\n    render() {\n        return (\n            <Menu.Item\n                onClick={this.handleClick}\n                name={this.props.name}\n                header={this.props.header}\n                active={this.isActive}\n            >\n                <Icon name={this.props.icon} /> {this.props.name}\n            </Menu.Item>\n        )\n    }\n}\n\nexport default NavItem\n","import React from 'react'\nimport { Menu } from 'semantic-ui-react'\n\nimport { usePagesData } from './use-pages-data'\nimport NavItem from './nav-item'\nimport styles from './nav.module.css'\n\nconst Nav = props => {\n    const pages = usePagesData()\n\n    return (\n        <Menu\n            pointing\n            secondary\n            stackable\n            fluid\n            widths={pages.length}\n            className={styles.nav}\n        >\n            {pages.map((page, i) => (\n                <NavItem key={i} {...props} {...page} />\n            ))}\n        </Menu>\n    )\n}\n\nexport default Nav\n","import { useStaticQuery, graphql } from 'gatsby'\n\nexport const usePagesData = () => {\n    const data = useStaticQuery(graphql`\n        query SiteTitleQuery {\n            site {\n                siteMetadata {\n                    pages {\n                        name\n                        href\n                        icon\n                        header\n                    }\n                }\n            }\n        }\n    `)\n\n    return data.site.siteMetadata.pages\n}\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { graphql, StaticQuery } from 'gatsby'\n\nconst Head = ({ pathname, title }) => (\n    <StaticQuery\n        query={graphql`\n            query SiteMetadata {\n                site {\n                    siteMetadata {\n                        url\n                        twitter\n                        ogImgPath\n                    }\n                }\n            }\n        `}\n        render={({\n            site: {\n                siteMetadata: { url, twitter, ogImgPath },\n            },\n        }) => (\n            <Helmet defaultTitle={title} titleTemplate={`%s | ${title}`}>\n                <html lang=\"en\" />\n                <link rel=\"canonical\" href={`${url}${pathname}`} />\n                <meta name=\"docsearch:version\" content=\"2.0\" />\n                <meta\n                    name=\"viewport\"\n                    content=\"width=device-width,initial-scale=1,shrink-to-fit=no,viewport-fit=cover\"\n                />\n\n                <meta property=\"og:url\" content={url} />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:locale\" content=\"en\" />\n                <meta property=\"og:site_name\" content={title} />\n                <meta property=\"og:image\" content={`${url}${ogImgPath}`} />\n                <meta property=\"og:image:width\" content=\"512\" />\n                <meta property=\"og:image:height\" content=\"512\" />\n\n                <meta name=\"twitter:card\" content=\"summary\" />\n                <meta name=\"twitter:site\" content={twitter} />\n            </Helmet>\n        )}\n    />\n)\n\nexport default Head\n","import 'semantic-ui-css/semantic.min.css'\nimport React from 'react'\nimport propTypes from 'prop-types'\nimport loadScript from 'simple-load-script'\nimport { Container } from 'semantic-ui-react'\n\nimport { scripts } from '../static/external'\nimport { Header, Footer, Nav, Head } from '../components'\nimport styles from './main.module.css'\nimport { graphql } from 'gatsby'\n\nclass MainLayout extends React.Component {\n    static propTypes = {\n        backgroundImgSrc: propTypes.object.isRequired,\n        title: propTypes.string.isRequired,\n        headerText: propTypes.string.isRequired,\n        subHeaderText: propTypes.string.isRequired,\n        calcYear: propTypes.func,\n        extScripts: propTypes.arrayOf(propTypes.string),\n    }\n\n    static defaultProps = {\n        calcYear: () => new Date().getFullYear(),\n        extScripts: scripts,\n    }\n\n    state = {\n        scriptsLoaded: false,\n        scriptsError: null,\n    }\n\n    async componentDidMount() {\n        const scriptLoadPs = this.props.extScripts.map(src =>\n            loadScript(src, { inBody: true }),\n        )\n\n        try {\n            await Promise.all(scriptLoadPs)\n            this.setState(state => ({ scriptsLoaded: true }))\n        } catch (err) {\n            this.setState(state => ({ scriptsLoaded: true, scriptsError: err }))\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Head\n                    pathname={this.props.location.pathname}\n                    title={this.props.title}\n                />\n                <div className={styles.main}>\n                    <div className={styles.container}>\n                        <Nav {...this.props} />\n                        <Header\n                            subText={this.props.subHeaderText}\n                            imgSrc={this.props.backgroundImgSrc}\n                        >\n                            {this.props.headerText}\n                        </Header>\n\n                        <Container\n                            className={styles.contentContainer}\n                            text\n                            textAlign=\"justified\"\n                        >\n                            {this.props.children}\n                        </Container>\n                    </div>\n\n                    <Footer>I hope you enjoyed my website!</Footer>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default MainLayout\n\nexport const headerImageFragment = graphql`\n    fragment HeaderImageFragment on File {\n        childImageSharp {\n            fixed(width: 900, height: 500) {\n                ...GatsbyImageSharpFixed\n            }\n        }\n    }\n`\n\nexport const imageSelector = data => data.file.childImageSharp.fixed\n","export const scripts = []\n"],"sourceRoot":""}