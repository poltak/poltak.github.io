{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/footer.js","webpack:///./src/components/header.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/nav-item.js","webpack:///./src/components/nav.js","webpack:///./src/components/use-pages-data.js","webpack:///./src/components/head.js","webpack:///./src/layouts/main.js","webpack:///./src/static/external.js"],"names":["IndexPage","props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layouts_main__WEBPACK_IMPORTED_MODULE_6__","Object","assign","headerText","subHeaderText","title","backgroundImgSrc","imageSelector","data","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","as","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","bulleted","Item","href","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","icon","color","labelPosition","target","semantic_ui_react__WEBPACK_IMPORTED_MODULE_5__","name","query","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","React","InternalPageRenderer","json","propTypes","PropTypes","shape","pathname","string","isRequired","Footer","children","objectWithoutPropertiesLoose_default","react_default","className","styles","footer","Divider","Container","footerText","text","textAlign","header","subText","imgSrc","container","gatsby_image_default","img","fixed","Header","Fragment","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","StaticQuery","Consumer","object","func","NavItem","handleClick","e","navigate","_this","Menu","onClick","this","active","isActive","Icon","PureComponent","any","bool","Nav","pages","_2596092274","site","siteMetadata","pointing","secondary","stackable","fluid","widths","length","nav","map","page","i","nav_item","key","Head","gatsby_browser_entry_StaticQuery","_ref2","_ref2$site$siteMetada","url","twitter","ogImgPath","Helmet","defaultTitle","titleTemplate","lang","rel","content","property","_2359324934","MainLayout","state","scriptsLoaded","scriptsError","componentDidMount","_callee","scriptLoadPs","regenerator_default","wrap","_context","prev","next","extScripts","src","loadScript","inBody","Promise","all","setState","t0","stop","head","main","contentContainer","Component","calcYear","arrayOf","defaultProps","Date","getFullYear","file","childImageSharp"],"mappings":"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","file":"component---src-pages-index-js-3b62a3a2d9c6472a77cf.js","sourcesContent":["import React from 'react'\nimport { Header, List, Button, Icon } from 'semantic-ui-react'\nimport { graphql } from 'gatsby'\n\nimport MainLayout, { imageSelector } from '../layouts/main'\n\nconst IndexPage = props => (\n    <MainLayout\n        headerText=\"poltak.github.io\"\n        subHeaderText=\"A site about me\"\n        title=\"poltak.github.io\"\n        backgroundImgSrc={imageSelector(props.data)}\n        {...props}\n    >\n        <Header as=\"h2\">What is this site?</Header>\n        <p>This site is an online space for myself to:</p>\n        <List bulleted>\n            <List.Item>\n                occasionally write about things I find interesting\n            </List.Item>\n            <List.Item>keep an online version of my resume updated</List.Item>\n            <List.Item>\n                talk a little bit about myself (for those who are interested)\n            </List.Item>\n            <List.Item>\n                play around with static site technologies, when I have spare\n                time\n            </List.Item>\n        </List>\n        <Header as=\"h2\">Technologies used</Header>\n        <p>\n            This site was created with the assistance of the following\n            technologies:\n        </p>\n        <List bulleted>\n            <List.Item>\n                <a href=\"https://pages.github.com\">GitHub Pages</a> - free\n                hosting and version control\n            </List.Item>\n            <List.Item>\n                <a href=\"https://www.gatsbyjs.org/\">GatsbyJS</a> - allows me to\n                write my site in React and handles the static site build process\n            </List.Item>\n            <List.Item>\n                <a href=\"https://react.semantic-ui.com/\">Semantic UI React</a> -\n                very nice UI framework with React integration\n            </List.Item>\n        </List>\n        <Header as=\"h2\">Open source</Header>\n        <p>\n            The source code for this site can be found in my site’s{' '}\n            <a href=\"https://github.com/poltak/poltak.github.io\">GitHub repo</a>\n            .\n        </p>\n        <p>\n            Feel free to criticize my code, send PRs, etc. I'm still learning\n            everyday, and always open to suggestions.\n        </p>\n\n        <Button\n            icon\n            color=\"blue\"\n            labelPosition=\"left\"\n            href=\"https://github.com/poltak/poltak.github.io/issues/new\"\n            target=\"_blank\"\n        >\n            <Icon name=\"discussions\" /> Leave me feedback\n        </Button>\n    </MainLayout>\n)\n\nexport default IndexPage\n\nexport const query = graphql`\n    query {\n        file(relativePath: { eq: \"bien.jpg\" }) {\n            ...HeaderImageFragment\n        }\n    }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Container, Divider } from 'semantic-ui-react'\n\nimport styles from './footer.module.css'\n\nconst Footer = ({ children, ...props }) => (\n    <footer className={styles.footer} {...props}>\n        <Divider />\n        <Container className={styles.footerText} text textAlign=\"right\">\n            <p>{children}</p>\n        </Container>\n    </footer>\n)\n\nexport default Footer\n","import React from 'react'\nimport Img from 'gatsby-image'\nimport { Header } from 'semantic-ui-react'\n\nimport styles from './header.module.css'\n\nexport default ({ children, subText, imgSrc, ...props }) => (\n    <header className={styles.container} {...props}>\n        <Img className={styles.img} fixed={imgSrc} />\n        <Header as=\"h1\" className={styles.headerText}>\n            {children}\n        </Header>\n        {subText && (\n            <>\n                <Header as=\"h2\" className={styles.subText}>\n                    {subText}\n                </Header>\n            </>\n        )}\n    </header>\n)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react'\nimport propTypes from 'prop-types'\nimport { navigate } from 'gatsby'\nimport { Menu, Icon } from 'semantic-ui-react'\n\nclass NavItem extends React.PureComponent {\n    static propTypes = {\n        name: propTypes.string.isRequired,\n        href: propTypes.string.isRequired,\n        icon: propTypes.string.isRequired,\n        location: propTypes.any.isRequired,\n        header: propTypes.bool,\n    }\n\n    get isActive() {\n        return this.props.location.pathname === this.props.href\n    }\n\n    handleClick = e => navigate(this.props.href)\n\n    render() {\n        return (\n            <Menu.Item\n                onClick={this.handleClick}\n                name={this.props.name}\n                header={this.props.header}\n                active={this.isActive}\n            >\n                <Icon name={this.props.icon} /> {this.props.name}\n            </Menu.Item>\n        )\n    }\n}\n\nexport default NavItem\n","import React from 'react'\nimport { Menu } from 'semantic-ui-react'\n\nimport { usePagesData } from './use-pages-data'\nimport NavItem from './nav-item'\nimport styles from './nav.module.css'\n\nconst Nav = props => {\n    const pages = usePagesData()\n\n    return (\n        <Menu\n            pointing\n            secondary\n            stackable\n            fluid\n            widths={pages.length}\n            className={styles.nav}\n        >\n            {pages.map((page, i) => (\n                <NavItem key={i} {...props} {...page} />\n            ))}\n        </Menu>\n    )\n}\n\nexport default Nav\n","import { useStaticQuery, graphql } from 'gatsby'\n\nexport const usePagesData = () => {\n    const data = useStaticQuery(graphql`\n        query SiteTitleQuery {\n            site {\n                siteMetadata {\n                    pages {\n                        name\n                        href\n                        icon\n                        header\n                    }\n                }\n            }\n        }\n    `)\n\n    return data.site.siteMetadata.pages\n}\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { graphql, StaticQuery } from 'gatsby'\n\nconst Head = ({ pathname, title }) => (\n    <StaticQuery\n        query={graphql`\n            query SiteMetadata {\n                site {\n                    siteMetadata {\n                        url\n                        twitter\n                        ogImgPath\n                    }\n                }\n            }\n        `}\n        render={({\n            site: {\n                siteMetadata: { url, twitter, ogImgPath },\n            },\n        }) => (\n            <Helmet defaultTitle={title} titleTemplate={`%s | ${title}`}>\n                <html lang=\"en\" />\n                <link rel=\"canonical\" href={`${url}${pathname}`} />\n                <meta name=\"docsearch:version\" content=\"2.0\" />\n                <meta\n                    name=\"viewport\"\n                    content=\"width=device-width,initial-scale=1,shrink-to-fit=no,viewport-fit=cover\"\n                />\n\n                <meta property=\"og:url\" content={url} />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:locale\" content=\"en\" />\n                <meta property=\"og:site_name\" content={title} />\n                <meta property=\"og:image\" content={`${url}${ogImgPath}`} />\n                <meta property=\"og:image:width\" content=\"512\" />\n                <meta property=\"og:image:height\" content=\"512\" />\n\n                <meta name=\"twitter:card\" content=\"summary\" />\n                <meta name=\"twitter:site\" content={twitter} />\n            </Helmet>\n        )}\n    />\n)\n\nexport default Head\n","import 'semantic-ui-css/semantic.min.css'\nimport React from 'react'\nimport propTypes from 'prop-types'\nimport loadScript from 'simple-load-script'\nimport { Container } from 'semantic-ui-react'\n\nimport { scripts } from '../static/external'\nimport { Header, Footer, Nav, Head } from '../components'\nimport styles from './main.module.css'\nimport { graphql } from 'gatsby'\n\nclass MainLayout extends React.Component {\n    static propTypes = {\n        backgroundImgSrc: propTypes.object.isRequired,\n        title: propTypes.string.isRequired,\n        headerText: propTypes.string.isRequired,\n        subHeaderText: propTypes.string.isRequired,\n        calcYear: propTypes.func,\n        extScripts: propTypes.arrayOf(propTypes.string),\n    }\n\n    static defaultProps = {\n        calcYear: () => new Date().getFullYear(),\n        extScripts: scripts,\n    }\n\n    state = {\n        scriptsLoaded: false,\n        scriptsError: null,\n    }\n\n    async componentDidMount() {\n        const scriptLoadPs = this.props.extScripts.map(src =>\n            loadScript(src, { inBody: true }),\n        )\n\n        try {\n            await Promise.all(scriptLoadPs)\n            this.setState(state => ({ scriptsLoaded: true }))\n        } catch (err) {\n            this.setState(state => ({ scriptsLoaded: true, scriptsError: err }))\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Head\n                    pathname={this.props.location.pathname}\n                    title={this.props.title}\n                />\n                <div className={styles.main}>\n                    <div className={styles.container}>\n                        <Nav {...this.props} />\n                        <Header\n                            subText={this.props.subHeaderText}\n                            imgSrc={this.props.backgroundImgSrc}\n                        >\n                            {this.props.headerText}\n                        </Header>\n\n                        <Container\n                            className={styles.contentContainer}\n                            text\n                            textAlign=\"justified\"\n                        >\n                            {this.props.children}\n                        </Container>\n                    </div>\n\n                    <Footer>I hope you enjoyed my website!</Footer>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default MainLayout\n\nexport const headerImageFragment = graphql`\n    fragment HeaderImageFragment on File {\n        childImageSharp {\n            fixed(width: 900, height: 500) {\n                ...GatsbyImageSharpFixed\n            }\n        }\n    }\n`\n\nexport const imageSelector = data => data.file.childImageSharp.fixed\n","export const scripts = []\n"],"sourceRoot":""}