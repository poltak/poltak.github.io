{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/footer.js","webpack:///./src/components/header.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/nav-item.js","webpack:///./src/components/nav.js","webpack:///./src/components/use-pages-data.js","webpack:///./src/components/head.js","webpack:///./src/layouts/main.js","webpack:///./src/static/external.js"],"names":["BlogPage","props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layouts_main__WEBPACK_IMPORTED_MODULE_3__","Object","assign","backgroundImgSrc","imageSelector","data","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","as","textAlign","location","pathname","query","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","React","InternalPageRenderer","json","propTypes","PropTypes","shape","string","isRequired","Footer","children","objectWithoutPropertiesLoose_default","react_default","className","styles","footer","Divider","Container","footerText","text","header","subText","imgSrc","container","gatsby_image_default","img","fixed","Header","headerText","Fragment","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","StaticQuery","Consumer","object","func","NavItem","handleClick","e","navigate","_this","href","Menu","Item","onClick","this","name","active","isActive","Icon","icon","PureComponent","any","bool","Nav","pages","_2596092274","site","siteMetadata","pointing","secondary","stackable","fluid","widths","length","nav","map","page","i","nav_item","key","Head","title","gatsby_browser_entry_StaticQuery","_ref2","_ref2$site$siteMetada","url","twitter","ogImgPath","Helmet","defaultTitle","titleTemplate","lang","rel","content","property","_2359324934","MainLayout","state","scriptsLoaded","scriptsError","componentDidMount","_callee","scriptLoadPs","regenerator_default","wrap","_context","prev","next","extScripts","src","loadScript","inBody","Promise","all","setState","t0","stop","head","main","subHeaderText","contentContainer","Component","calcYear","arrayOf","defaultProps","Date","getFullYear","file","childImageSharp"],"mappings":"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","file":"component---src-pages-404-js-2f2ac1da3289d9cf4b2b.js","sourcesContent":["import React from 'react'\nimport { Header } from 'semantic-ui-react'\nimport { graphql } from 'gatsby'\n\nimport MainLayout, { imageSelector } from '../layouts/main'\n\nconst BlogPage = props => (\n    <MainLayout backgroundImgSrc={imageSelector(props.data)} {...props}>\n        <Header as=\"h2\" textAlign=\"center\">\n            Page <code>{props.location.pathname}</code> not found...\n        </Header>\n    </MainLayout>\n)\n\nexport default BlogPage\n\nexport const query = graphql`\n    query {\n        file(relativePath: { eq: \"cachep.jpg\" }) {\n            ...HeaderImageFragment\n        }\n    }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Container, Divider } from 'semantic-ui-react'\n\nimport styles from './footer.module.css'\n\nconst Footer = ({ children, ...props }) => (\n    <footer className={styles.footer} {...props}>\n        <Divider />\n        <Container className={styles.footerText} text textAlign=\"right\">\n            <p>{children}</p>\n        </Container>\n    </footer>\n)\n\nexport default Footer\n","import React from 'react'\nimport Img from 'gatsby-image'\nimport { Header } from 'semantic-ui-react'\n\nimport styles from './header.module.css'\n\nexport default ({ children, subText, imgSrc, ...props }) => (\n    <header className={styles.container} {...props}>\n        <Img className={styles.img} fixed={imgSrc} />\n        <Header as=\"h1\" className={styles.headerText}>\n            {children}\n        </Header>\n        {subText && (\n            <>\n                <Header as=\"h2\" className={styles.subText}>\n                    {subText}\n                </Header>\n            </>\n        )}\n    </header>\n)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react'\nimport propTypes from 'prop-types'\nimport { navigate } from 'gatsby'\nimport { Menu, Icon } from 'semantic-ui-react'\n\nclass NavItem extends React.PureComponent {\n    static propTypes = {\n        name: propTypes.string.isRequired,\n        href: propTypes.string.isRequired,\n        icon: propTypes.string.isRequired,\n        location: propTypes.any.isRequired,\n        header: propTypes.bool,\n    }\n\n    get isActive() {\n        return this.props.location.pathname === this.props.href\n    }\n\n    handleClick = e => navigate(this.props.href)\n\n    render() {\n        return (\n            <Menu.Item\n                onClick={this.handleClick}\n                name={this.props.name}\n                header={this.props.header}\n                active={this.isActive}\n            >\n                <Icon name={this.props.icon} /> {this.props.name}\n            </Menu.Item>\n        )\n    }\n}\n\nexport default NavItem\n","import React from 'react'\nimport { Menu } from 'semantic-ui-react'\n\nimport { usePagesData } from './use-pages-data'\nimport NavItem from './nav-item'\nimport styles from './nav.module.css'\n\nconst Nav = props => {\n    const pages = usePagesData()\n\n    return (\n        <Menu\n            pointing\n            secondary\n            stackable\n            fluid\n            widths={pages.length}\n            className={styles.nav}\n        >\n            {pages.map((page, i) => (\n                <NavItem key={i} {...props} {...page} />\n            ))}\n        </Menu>\n    )\n}\n\nexport default Nav\n","import { useStaticQuery, graphql } from 'gatsby'\n\nexport const usePagesData = () => {\n    const data = useStaticQuery(graphql`\n        query SiteTitleQuery {\n            site {\n                siteMetadata {\n                    pages {\n                        name\n                        href\n                        icon\n                        header\n                    }\n                }\n            }\n        }\n    `)\n\n    return data.site.siteMetadata.pages\n}\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { graphql, StaticQuery } from 'gatsby'\n\nconst Head = ({ pathname, title }) => (\n    <StaticQuery\n        query={graphql`\n            query SiteMetadata {\n                site {\n                    siteMetadata {\n                        url\n                        twitter\n                        ogImgPath\n                    }\n                }\n            }\n        `}\n        render={({\n            site: {\n                siteMetadata: { url, twitter, ogImgPath },\n            },\n        }) => (\n            <Helmet defaultTitle={title} titleTemplate={`%s | ${title}`}>\n                <html lang=\"en\" />\n                <link rel=\"canonical\" href={`${url}${pathname}`} />\n                <meta name=\"docsearch:version\" content=\"2.0\" />\n                <meta\n                    name=\"viewport\"\n                    content=\"width=device-width,initial-scale=1,shrink-to-fit=no,viewport-fit=cover\"\n                />\n\n                <meta property=\"og:url\" content={url} />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:locale\" content=\"en\" />\n                <meta property=\"og:site_name\" content={title} />\n                <meta property=\"og:image\" content={`${url}${ogImgPath}`} />\n                <meta property=\"og:image:width\" content=\"512\" />\n                <meta property=\"og:image:height\" content=\"512\" />\n\n                <meta name=\"twitter:card\" content=\"summary\" />\n                <meta name=\"twitter:site\" content={twitter} />\n            </Helmet>\n        )}\n    />\n)\n\nexport default Head\n","import 'semantic-ui-css/semantic.min.css'\nimport React from 'react'\nimport propTypes from 'prop-types'\nimport loadScript from 'simple-load-script'\nimport { Container } from 'semantic-ui-react'\n\nimport { scripts } from '../static/external'\nimport { Header, Footer, Nav, Head } from '../components'\nimport styles from './main.module.css'\nimport { graphql } from 'gatsby'\n\nclass MainLayout extends React.Component {\n    static propTypes = {\n        backgroundImgSrc: propTypes.object.isRequired,\n        title: propTypes.string.isRequired,\n        headerText: propTypes.string.isRequired,\n        subHeaderText: propTypes.string.isRequired,\n        calcYear: propTypes.func,\n        extScripts: propTypes.arrayOf(propTypes.string),\n    }\n\n    static defaultProps = {\n        calcYear: () => new Date().getFullYear(),\n        extScripts: scripts,\n    }\n\n    state = {\n        scriptsLoaded: false,\n        scriptsError: null,\n    }\n\n    async componentDidMount() {\n        const scriptLoadPs = this.props.extScripts.map(src =>\n            loadScript(src, { inBody: true }),\n        )\n\n        try {\n            await Promise.all(scriptLoadPs)\n            this.setState(state => ({ scriptsLoaded: true }))\n        } catch (err) {\n            this.setState(state => ({ scriptsLoaded: true, scriptsError: err }))\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Head\n                    pathname={this.props.location.pathname}\n                    title={this.props.title}\n                />\n                <div className={styles.main}>\n                    <div className={styles.container}>\n                        <Nav {...this.props} />\n                        <Header\n                            subText={this.props.subHeaderText}\n                            imgSrc={this.props.backgroundImgSrc}\n                        >\n                            {this.props.headerText}\n                        </Header>\n\n                        <Container\n                            className={styles.contentContainer}\n                            text\n                            textAlign=\"justified\"\n                        >\n                            {this.props.children}\n                        </Container>\n                    </div>\n\n                    <Footer>I hope you enjoyed my website!</Footer>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default MainLayout\n\nexport const headerImageFragment = graphql`\n    fragment HeaderImageFragment on File {\n        childImageSharp {\n            fixed(width: 900, height: 500) {\n                ...GatsbyImageSharpFixed\n            }\n        }\n    }\n`\n\nexport const imageSelector = data => data.file.childImageSharp.fixed\n","export const scripts = []\n"],"sourceRoot":""}