{"version":3,"sources":["webpack:///./src/components/contact-card.module.css","webpack:///./src/components/contact-card.js","webpack:///./src/components/contact-card-container.js","webpack:///./src/components/use-contact-data.js","webpack:///./src/pages/contact.js"],"names":["module","exports","ContactCardInfoRow","props","className","styles","infoRow","infoRowTitle","Icon","name","icon","title","infoRowValue","href","value","ContactCard","render","cx","container","this","containerCentered","centered","Image","avatarImg","src","avatarHref","infoContainer","email","emailHref","linkedIn","linkedInHref","github","githubHref","twitter","twitterHref","goodreads","goodreadsHref","React","PureComponent","useStaticQuery","site","siteMetadata","query","ContactPage","headerText","subHeaderText","backgroundImgSrc","imageSelector","data"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,UAAY,wCAAwC,kBAAoB,gDAAgD,UAAY,wCAAwC,cAAgB,4CAA4C,QAAU,sCAAsC,aAAe,2CAA2C,aAAe,2CAA2C,KAAO,qC,4NCMxZC,EAAqB,SAAAC,GAAK,OACnC,yBAAKC,UAAWC,IAAOC,SACnB,yBAAKF,UAAWC,IAAOE,cACnB,kBAACC,EAAA,EAAD,CAAMC,KAAMN,EAAMO,OACjBP,EAAMQ,OAEX,uBAAGP,UAAWC,IAAOO,aAAcC,KAAMV,EAAMU,MAC1CV,EAAMW,SAYNC,EAAb,kGAmCIC,OAAA,WAAU,IAAD,EACL,OACI,yBACIZ,UAAWa,IAAGZ,IAAOa,UAAWC,KAAKhB,MAAMC,WAA9B,OACRC,IAAOe,mBAAoBD,KAAKhB,MAAMkB,SAD9B,KAIb,kBAACC,EAAA,EAAD,CAAOlB,UAAWC,IAAOkB,UAAWC,IAAKL,KAAKM,aAC9C,yBAAKrB,UAAWC,IAAOqB,eACnB,wBAAItB,UAAWC,IAAOI,MAAOU,KAAKhB,MAAMM,MACxC,kBAAC,EAAD,CACIC,KAAK,eACLC,MAAM,QACNG,MAAOK,KAAKhB,MAAMwB,MAClBd,KAAMM,KAAKS,YAEf,kBAAC,EAAD,CACIlB,KAAK,WACLC,MAAM,WACNG,MAAOK,KAAKhB,MAAM0B,SAClBhB,KAAMM,KAAKW,eAEf,kBAAC,EAAD,CACIpB,KAAK,SACLC,MAAM,SACNG,MAAOK,KAAKhB,MAAM4B,OAClBlB,KAAMM,KAAKa,aAEf,kBAAC,EAAD,CACItB,KAAK,UACLC,MAAM,UACNG,MAAOK,KAAKhB,MAAM8B,QAClBpB,KAAMM,KAAKe,cAEf,kBAAC,EAAD,CACIxB,KAAK,OACLC,MAAM,YACNG,MAAOK,KAAKhB,MAAMgC,UAClBtB,KAAMM,KAAKiB,mBAzEnC,gDAaQ,MAAM,yCAA0CjB,KAAKhB,MAAM4B,SAbnE,mCAiBQ,MAAM,8BAA+BZ,KAAKhB,MAAM0B,WAjBxD,iCAoBQ,MAAM,sBAAuBV,KAAKhB,MAAM4B,SApBhD,kCAwBQ,MAAM,2BAA4BZ,KAAKhB,MAAM8B,UAxBrD,oCA4BQ,MAAM,yBAA0Bd,KAAKhB,MAAMgC,YA5BnD,gCAgCQ,MAAM,UAAWhB,KAAKhB,MAAMwB,UAhCpC,GAAiCU,IAAMC,eCrB1BvB,EAAc,SAAAZ,GAAK,OAAI,kBAAC,EAAD,iBCFnBoC,YAAe,cAehBC,KAAKC,aDb+CtC,KEmBvDuC,GAFEC,UAhBK,SAAAxC,GAAK,OACrB,kBAAC,IAAD,eACIyC,WAAW,UACXC,cAAc,yBACdlC,MAAM,UACNmC,iBAAkBC,YAAc5C,EAAM6C,OAClC7C,GAEJ,uJAIA,kBAAC,EAAD,CAAakB,UAAQ,MAMX","file":"component---src-pages-contact-js-a626d0d3e42666dd1cbf.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"contact-card-module--container--2MBQM\",\"containerCentered\":\"contact-card-module--containerCentered--1edB-\",\"avatarImg\":\"contact-card-module--avatarImg--3opUc\",\"infoContainer\":\"contact-card-module--infoContainer--3ZEu9\",\"infoRow\":\"contact-card-module--infoRow--18mO7\",\"infoRowTitle\":\"contact-card-module--infoRowTitle--3GRLG\",\"infoRowValue\":\"contact-card-module--infoRowValue--KhM1w\",\"name\":\"contact-card-module--name--3WXuf\"};","import React from 'react'\nimport cx from 'classnames'\nimport propTypes from 'prop-types'\nimport { Image, Icon } from 'semantic-ui-react'\n\nimport styles from './contact-card.module.css'\n\nexport const ContactCardInfoRow = props => (\n    <div className={styles.infoRow}>\n        <div className={styles.infoRowTitle}>\n            <Icon name={props.icon} />\n            {props.title}\n        </div>\n        <a className={styles.infoRowValue} href={props.href}>\n            {props.value}\n        </a>\n    </div>\n)\n\nContactCardInfoRow.propTypes = {\n    icon: propTypes.string.isRequired,\n    title: propTypes.string.isRequired,\n    value: propTypes.string.isRequired,\n    href: propTypes.string.isRequired,\n}\n\nexport class ContactCard extends React.PureComponent {\n    static propTypes = {\n        className: propTypes.string,\n        name: propTypes.string.isRequired,\n        email: propTypes.string.isRequired,\n        linkedIn: propTypes.string.isRequired,\n        github: propTypes.string.isRequired,\n        twitter: propTypes.string.isRequired,\n        goodreads: propTypes.string.isRequired,\n        centered: propTypes.bool,\n    }\n\n    get avatarHref() {\n        return `https://avatars.githubusercontent.com/${this.props.github}`\n    }\n\n    get linkedInHref() {\n        return `http://www.linkedin.com/in/${this.props.linkedIn}`\n    }\n    get githubHref() {\n        return `https://github.com/${this.props.github}`\n    }\n\n    get twitterHref() {\n        return `https://www.twitter.com/${this.props.twitter}`\n    }\n\n    get goodreadsHref() {\n        return `https://goodreads.com/${this.props.goodreads}`\n    }\n\n    get emailHref() {\n        return `mailto:${this.props.email}`\n    }\n\n    render() {\n        return (\n            <div\n                className={cx(styles.container, this.props.className, {\n                    [styles.containerCentered]: this.props.centered,\n                })}\n            >\n                <Image className={styles.avatarImg} src={this.avatarHref} />\n                <div className={styles.infoContainer}>\n                    <h1 className={styles.name}>{this.props.name}</h1>\n                    <ContactCardInfoRow\n                        icon=\"mail outline\"\n                        title=\"Email\"\n                        value={this.props.email}\n                        href={this.emailHref}\n                    />\n                    <ContactCardInfoRow\n                        icon=\"linkedin\"\n                        title=\"LinkedIn\"\n                        value={this.props.linkedIn}\n                        href={this.linkedInHref}\n                    />\n                    <ContactCardInfoRow\n                        icon=\"github\"\n                        title=\"GitHub\"\n                        value={this.props.github}\n                        href={this.githubHref}\n                    />\n                    <ContactCardInfoRow\n                        icon=\"twitter\"\n                        title=\"Twitter\"\n                        value={this.props.twitter}\n                        href={this.twitterHref}\n                    />\n                    <ContactCardInfoRow\n                        icon=\"book\"\n                        title=\"Goodreads\"\n                        value={this.props.goodreads}\n                        href={this.goodreadsHref}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nimport { useContactData } from './use-contact-data'\nimport { ContactCard as Card } from './contact-card'\n\nexport const ContactCard = props => <Card {...useContactData()} {...props} />\n","import { useStaticQuery, graphql } from 'gatsby'\n\nexport const useContactData = () => {\n    const data = useStaticQuery(graphql`\n        query SiteContactQuery {\n            site {\n                siteMetadata {\n                    goodreads\n                    linkedIn\n                    twitter\n                    github\n                    email\n                    name\n                }\n            }\n        }\n    `)\n\n    return data.site.siteMetadata\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport MainLayout, { imageSelector } from '../layouts/main'\nimport { ContactCard } from '../components/contact-card-container'\n\nconst ContactPage = props => (\n    <MainLayout\n        headerText=\"Contact\"\n        subHeaderText=\"Where can you find me?\"\n        title=\"Contact\"\n        backgroundImgSrc={imageSelector(props.data)}\n        {...props}\n    >\n        <p>\n            My preferred means of contact is via email, although you can also\n            contact me through online social networks that I'm on.\n        </p>\n        <ContactCard centered />\n    </MainLayout>\n)\n\nexport default ContactPage\n\nexport const query = graphql`\n    query {\n        file(relativePath: { eq: \"tra.jpg\" }) {\n            ...HeaderImageFragment\n        }\n    }\n`\n"],"sourceRoot":""}